#!/usr/bin/env r


## Copy General Parameter files into 0.raw.data directory

file.copy(
	from = file.path("/", "home", "rstudio", "LEEF", "pipeline", "general.parameter"),
	to = file.path("/", "home", "rstudio", "LEEF", "0.raw.data"),
	recursive = TRUE
)

## Define pipeline .yml file

pipeline <- normalizePath(
	file.path("/", "home", "rstudio", "LEEF", "pipeline", "pipeline.fast.yml"),
	mustWork = FALSE
)

if (!file.exists(pipeline)) {
	stop("pipeline.fast.yml pipeline config file does not exist in the expected directory `", dirname(pipeline), "/`!")
}

## And Run!

setwd("/home/rstudio/LEEF")

options(mc.cores = parallel::detectCores() - 1)
options(warn = 1)

library(LEEF)

LEEF::init_LEEF(config_file = pipeline)

LEEF::process(process = FALSE)

message("\n########################################################\n")
message("\narchiving raw data ...\n")
LEEF.archive.default::run_archive_none(
  input = getOption("LEEF")$directories$raw,
  output = file.path(getOption("LEEF")$directories$archive, "raw")
)
message("done\n")
message("\n########################################################\n")

message("\n########################################################\n")
message("\npre_processing ...\n")
run_pre_processors()
message("done\n")
message("\n########################################################\n")

message("\n########################################################\n")
message("\narchiving pre-processed data...\n")
LEEF.archive.default::run_archive_tar.gz(
  input = getOption("LEEF")$directories$pre_processed,
  output = file.path(getOption("LEEF")$directories$archive, "pre_processed")
)
message("done\n")
message("\n########################################################\n")

message("\n########################################################\n")
message("\nextracting ...\n")
run_extractors()
message("done\n")
message("\n########################################################\n")

message("\n########################################################\n")
message("\narchiving extracted data ...\n")
LEEF.archive.default::run_archive_tar.gz(
  input = getOption("LEEF")$directories$extracted,
  output = file.path(getOption("LEEF")$directories$archive, "extracted")
)
message("done\n")
message("\n########################################################\n")

message("\n########################################################\n")
message("\nadding...\n")
run_additors()
message("done\n")
message("\n########################################################\n")


